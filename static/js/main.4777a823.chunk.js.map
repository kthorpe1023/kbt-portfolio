{"version":3,"sources":["components/Navbar/index.js","components/Intro/index.js","components/AboutMe/index.js","components/Social/social.js","components/Project/project.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","target","Intro","AboutMe","class","id","src","alt","Social","rel","Project","props","console","log","image","name","description","link","ghlink","App","projects","map","project","img","gitHub","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2xFAqBeA,G,WAlBA,WACX,OACE,yBAAKC,UAAU,gBACb,6BACA,yBAAKA,UAAU,eACb,uBAAGC,KAAK,KAAKD,UAAU,4BAA2B,uBAAGA,UAAU,kBAAb,SAClD,wBAAIA,UAAU,SACZ,4BAAI,uBAAGC,KAAK,cAAa,uBAAGD,UAAU,kBAAb,iBACzB,4BAAI,uBAAGC,KAAK,YAAW,uBAAGD,UAAU,kBAAb,gBACvB,4BAAI,uBAAGC,KAAK,sDAAsDC,OAAO,UAAS,uBAAGF,UAAU,kBAAb,qBCQ/EG,G,MAjBD,WACV,OACI,yBAAKH,UAAU,aACf,4CACA,wDACA,4BACI,0CACA,sCACA,gDACA,+CACA,uCACA,4CCKGI,G,MAhBC,WACZ,OACA,yBAAKC,MAAM,cAAcC,GAAG,WACxB,yBAAKA,GAAG,QAAQC,IAAI,gCAAgCC,IAAI,sBAE1D,yBAAKH,MAAM,kBACT,6KACA,+PAAoO,uBAAGJ,KAAK,oCAAoCC,OAAO,UAAnD,gCAApO,KACA,8cCEOO,G,MAVA,WACX,OACI,6BAAST,UAAU,UACnB,uBAAGC,KAAK,sDAAsDC,OAAO,SAASQ,IAAI,sBAAsBV,UAAU,yBAClH,uBAAGC,KAAK,iCAAiCC,OAAO,SAASQ,IAAI,sBAAsBV,UAAU,uBAC7F,uBAAGC,KAAK,yCAAyCC,OAAO,SAASQ,IAAI,sBAAsBV,UAAU,6BC0B9FW,G,MA/BC,SAACC,GAEb,OACJ,yBAAKZ,UAAU,kBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACZa,QAAQC,IAAIF,EAAMG,OACnB,yBAAKR,IAAKK,EAAMG,MAAQf,UAAU,wBAAwBQ,IAAKI,EAAMI,QAEvE,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,SAAkCY,EAAMI,MACxC,4BACA,4BACE,gDADF,IACiCJ,EAAMK,aAEvC,4BACE,uBAAGhB,KAAMW,EAAMM,KAAMhB,OAAO,SAASQ,IAAI,uBAAsB,wDAEjE,4BACE,uBAAGT,KAAMW,EAAMO,OAAQjB,OAAO,SAASQ,IAAI,uBAAsB,wD,OCa5DU,G,MA1BH,WACV,OACE,6BACE,kBAAC,EAAD,MACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKpB,UAAU,aACf,yBAAKA,UAAU,MAAMM,GAAG,aACrBe,EAASC,KAAI,SAACC,GAGb,OAAO,kBAAC,EAAD,CACLP,KAAMO,EAAQP,KACdC,YAAaM,EAAQN,YACrBF,MAAOQ,EAAQC,IACfN,KAAMK,EAAQL,KACdC,OAAQI,EAAQE,YAGpB,kBAAC,EAAD,WCjBUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,c","file":"static/js/main.4777a823.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Navbar = () => {\r\n    return(\r\n      <div className=\"navbar-fixed\">\r\n        <nav>\r\n        <div className=\"nav-wrapper\">\r\n          <a href=\"#!\" className=\"brand-logo nav-name left\"><i className=\"material-icons\">home</i></a>\r\n          <ul className=\"right\">\r\n            <li><a href=\"#portfolio\"><i className=\"material-icons\">view_module</i></a></li>\r\n            <li><a href=\"#aboutme\"><i className=\"material-icons\">person_pin</i></a></li>\r\n            <li><a href=\"./components/Project/images/KatieThorpeResumeGH.pdf\" target=\"_blank\"><i className=\"material-icons\">view_list</i></a></li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\nimport \"./intro.css\"\r\n\r\nconst Intro = () => {\r\n    return(\r\n        <div className=\"container\">\r\n        <h2>KATIE THORPE</h2>\r\n        <h3>Full Stack Web Developer</h3>\r\n        <ul>\r\n            <li>HTML & Css</li>\r\n            <li>jQuery</li>\r\n            <li>Javascript (ES6)</li>\r\n            <li>MySQL & MongoDB</li>\r\n            <li>Node.js</li>\r\n            <li>React.js</li>\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst AboutMe = () => {\r\n    return(\r\n    <div class=\"row aboutbg\" id=\"aboutme\">\r\n        <img id=\"Katie\" src=\"../Project/images/Kthorpe.PNG\" alt=\"Me and a mountain\"></img>\r\n  \r\n      <div class=\"col s12 col m8\">\r\n        <p>I live in Denver, CO, and while working full time as an admissions counselor, I have been learning to code in DU's full stack coding bootcamp.</p>\r\n        <p>Some of my favorite projects to work on were the group projects, Pantry Pirates and Code Connect. You can learn more about those projects and others I have worked on in my portfolio. Feel free to follow my journey as well by <a href=\"./images/KatieThorpesResumeGH.pdf\" target=\"_blank\">looking at my updated resume</a>.</p>\r\n        <p>When I'm not coding, I love getting out to the mountains and hiking. I really value time with my family and close friends. Gameboard nights, time spent in with a book, and rewatching Parks and Recreation are a favorite past time of mine. Put me in front of a puzzle or a project and I will dive into it for hours. I also have a cat that is the poster child for cat obesity, Harold, and he is very wonderful. Thanks for reading!\r\n        </p>\r\n        \r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe","import React from \"react\";\r\nimport \"./social.css\"\r\n\r\nconst Social = () => {\r\n    return(\r\n        <section className=\"social\">\r\n        <a href=\"https://www.linkedin.com/in/katie-thorpe-343064181/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-linkedin col 2\"></a>\r\n        <a href=\"https://github.com/kthorpe1023\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-github col 2\"></a>\r\n        <a href=\"https://www.instagram.com/ktbrady1023/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"fa fa-instagram col 2\"></a>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Social","import React from \"react\";\r\nimport \"./project.css\"\r\n\r\nconst Project = (props) => {\r\n\r\n    return(\r\n<div className=\"card mb-3 size\">\r\n  <div className=\"row no-gutters\">\r\n    <div className=\"col-md-12\">\r\n      {console.log(props.image)}\r\n      <img src={props.image}  className=\"card-img-top img-size\" alt={props.name}  />\r\n    </div>\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Name: {props.name}</h5>\r\n        <ul>\r\n        <li>\r\n          <strong>Description:</strong> {props.description}\r\n        </li>\r\n        <li>\r\n          <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\"><strong>Review the Website</strong></a>\r\n        </li>\r\n        <li>\r\n          <a href={props.ghlink} target=\"_blank\" rel=\"noopener noreferrer\"><strong>Github Repo</strong></a>\r\n        </li>\r\n      </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Project","import React from 'react';\nimport Navbar from \"./components/Navbar\";\nimport Intro from \"./components/Intro\";\nimport AboutMe from \"./components/AboutMe\";\nimport Social from \"./components/Social/social\"\nimport Project from \"./components/Project/project\"\nimport projects from \"./components/Project/portfolio.json\";\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n        <Intro />\n        <Social />\n        <div className=\"container\">\n        <div className=\"row\" id=\"portfolio\">\n          {projects.map((project) => {\n            // let projectImage = \"./images/codeConnect.PNG\"\n            // console.log(projectImage)\n            return(<Project\n              name={project.name}\n              description={project.description}\n              image={project.img}\n              link={project.link}\n              ghlink={project.gitHub}\n            />)\n          })}\n          <AboutMe />\n          </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}